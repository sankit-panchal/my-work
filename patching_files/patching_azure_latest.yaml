
---
- hosts: azure
  become: yes
  gather_facts: yes
  vars_prompt:
  - name: "ansible_sudo_pass"
    prompt: "Sudo password"
    private: yes
  vars:
  - mjv: ansible_distribution_major_version

  tasks:
        - name: copy pre-post script
          copy:
                src: "{{ item }}"
                dest: /tmp
          with_items:
                - ./pre-post-checks.sh
                - ./rhui-microsoft-azure-rhel{{ vars[mjv] }}.config

        - name: take pre check output
          command: sh /tmp/pre-post-checks.sh
          ignore_errors: no

        - name: Check for reboot flag
          stat:
               path: "/var/tmp/rebooted"
          register: file_data

        - name: remove version lock if present
          file:
                path: /etc/yum/vars/releasever
                state: absent

        - name: remove old yum config
          yum:
                name:
                 - rhui-azure-rhel{{ vars[mjv] }}-eus
                 - rhui-azure-rhel{{ vars[mjv] }}
                disablerepo: "*"
                state: absent

        - name: install new yum config
          yum:
                conf_file: /tmp/rhui-microsoft-azure-rhel{{ vars[mjv] }}.config
                name: rhui-azure-rhel{{ vars[mjv] }}
                state: present

        - name: Check packages for updates
          yum:
            list=updates
          ignore_errors: true
          environment:
                  ACCEPT_EULA: "Y"
          changed_when: yumupdates.results | length > 0
          register: yumupdates

        - name: Number of packages available for updates
          debug: msg="{{ yumupdates.results | length }} packages available for updates on {{ ansible_hostname }}"

        - when: ansible_distribution == "RedHat"
          block:
            - name: Install updates using yum
              yum:
                name: "*"
                state: latest
              environment:
                  ACCEPT_EULA: "Y"
              register: installed

        - when: installed.changed == true
          block:
            - name: Reboot after patching
              shell: sleep 2 && /sbin/shutdown -r now
              ignore_errors: true
              async: 300
              poll: 0
              register: serverreboot2

        - when: serverreboot2.changed == true
          block:
            - name: Validate if server is up after patching
              wait_for_connection:
                  connect_timeout: 20
                  sleep: 5
                  delay: 5
                  timeout: 300
#          when: serverreboot2.changed == true

            - name: take post check output
              command: sh /tmp/pre-post-checks.sh
              ignore_errors: no
              when: file_data.stat.exists
              register: post_check_output

            - name: remove pre-post file
              file:
                state: absent
                path: /tmp/pre-post-checks.sh

            - name: Create version lock
              shell: echo $(. /etc/os-release && echo $VERSION_ID) > /etc/yum/vars/releasever

            - debug:
                msg: "{{ post_check_output.stdout_lines }}"
